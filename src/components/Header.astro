---
// src/components/Header.astro (Updated with i18n support)
import MobileNav from './MobileNav.tsx';
import LanguageSwitcher from './LanguageSwitcher';
import { Image } from 'astro:assets';
import logo from '../assets/DayOne_Logo_Dark.png';
import logoLight from '../assets/DayOne_Logo_Light.png';
import { useTranslations } from '../utils/i18n';
import NavLinks from './NavLinks.astro';

const { t } = useTranslations();
---

<header class="adaptive-header">
  <nav class="container mx-auto px-4 sm:px-6 lg:px-8 py-3 sm:py-4 flex justify-between items-center">
    <!-- Logo -->
    <div class="flex items-center flex-shrink-0 logo-container">
      <a href="/" aria-label="DayOne Talent Advisory Home">
        <Image 
          src={logo} 
          alt="Logo DayOne" 
          class="max-w-28 sm:max-w-32 lg:max-w-36 h-auto logo-dark" 
        />
        <Image 
          src={logoLight} 
          alt="Logo DayOne" 
          class="max-w-28 sm:max-w-32 lg:max-w-36 h-auto logo-light" 
        />
      </a>
    </div>
    
    <!-- Desktop Navigation -->
    <div class="hidden lg:flex space-x-6 xl:space-x-8">
      <NavLinks classList="nav-link" />
    </div>
    
    <!-- Desktop Actions -->
    <div class="flex items-center gap-4">
      
      <!-- Language Switcher -->
      <LanguageSwitcher client:load variant="header" />
      
      <!-- CTA Button -->
      <a 
        href="/#contact"
        class="hidden lg:block bg-accent text-light hover:bg-white hover:text-dark transition-colors px-6 xl:px-8 py-2.5 xl:py-3 rounded-full font-medium cursor-pointer text-sm xl:text-base"
        title="Contact"
        data-translate-key="navigation.contact"
      >
        {t('navigation.contact')}
      </a>
    </div>
    
    <!-- Mobile menu -->
    <MobileNav client:load />
  </nav>
</header>

<script>
  function initSimpleAdaptiveHeader() {
    const header = document.querySelector('.adaptive-header');
    if (!header) return;
    
    const darkSections = ['hero', 'contact', 'footer', 'blog-hero', 'newsletter']; // Add your dark section IDs
    const lightSections = [ 'our-solutions', 'our-team', 'why-choose', 'blog-featured', 'blog-featured-articles', 'blog-main', 'blog-article', 'privacy-policy']; // Add your light section IDs

    function updateHeaderMode() {

      // Create intersection observer
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            const sectionId = entry.target.id;
            if (darkSections.includes(sectionId)) {
              header?.setAttribute('data-theme', 'light-text');
            } else if (lightSections.includes(sectionId)) {
              header?.setAttribute('data-theme', 'dark-text');
            }
          }
        });
      }, {
        threshold: 0.1, // Trigger when 30% of section is visible
        rootMargin: '-80px 0px -50% 0px' // Account for header height
      });

      // Observe all major sections
      const sections = document.querySelectorAll('section[id], main[id], footer[id]');
      sections.forEach(section => observer.observe(section));
      
      // Cleanup
      return () => observer.disconnect();

    }
    
    // Initial call
    updateHeaderMode();
    
    // Update on scroll with throttling
    let ticking = false;
    window.addEventListener('scroll', () => {
      if (!ticking) {
        requestAnimationFrame(() => {
          updateHeaderMode();
          ticking = false;
        });
        ticking = true;
      }
    }, { passive: true });
  }
  
  document.addEventListener('DOMContentLoaded', initSimpleAdaptiveHeader);
  document.addEventListener('astro:after-swap', initSimpleAdaptiveHeader);
</script>